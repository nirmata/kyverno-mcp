apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  annotations:
    kyverno.io/kubernetes-version: "1.21"
    policies.kyverno.io/category: RBAC Best Practices
    policies.kyverno.io/description: 'A new ServiceAccount called `default` is created
      whenever a new Namespace is created. Pods spawned in that Namespace, unless
      otherwise set, will be assigned this ServiceAccount. This policy mutates any
      new `default` ServiceAccounts to disable auto-mounting of the token into Pods
      obviating the need to do so individually.      '
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: ServiceAccount
    policies.kyverno.io/title: Disable automountServiceAccountToken
  name: disable-automount-sa-token
spec:
  rules:
  - match:
      any:
      - resources:
          kinds:
          - ServiceAccount
          names:
          - default
    mutate:
      patchStrategicMerge:
        automountServiceAccountToken: false
    name: disable-automountserviceaccounttoken
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  annotations:
    policies.kyverno.io/category: RBAC Best Practices
    policies.kyverno.io/description: 'Kubernetes automatically mounts ServiceAccount
      credentials in each Pod. The ServiceAccount may be assigned roles allowing Pods
      to access API resources. Blocking this ability is an extension of the least
      privilege best practice and should be followed if Pods do not need to speak
      to the API server to function. This policy ensures that mounting of these ServiceAccount
      tokens is blocked.      '
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod,ServiceAccount
    policies.kyverno.io/title: Restrict Auto-Mount of Service Account Tokens
  name: restrict-automount-sa-token
spec:
  background: true
  rules:
  - match:
      any:
      - resources:
          kinds:
          - Pod
    name: validate-automountServiceAccountToken
    preconditions:
      all:
      - key: '{{ request."object".metadata.labels."app.kubernetes.io/part-of" || ''''
          }}'
        operator: NotEquals
        value: policy-reporter
    validate:
      message: Auto-mounting of Service Account tokens is not allowed.
      pattern:
        spec:
          automountServiceAccountToken: "false"
  validationFailureAction: Audit
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  annotations:
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/category: RBAC Best Practices
    policies.kyverno.io/description: 'Certain system groups exist in Kubernetes which
      grant permissions that are used for certain system-level functions yet typically
      never appropriate for other users. This policy prevents creating bindings for
      system:masters group.      '
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: RoleBinding, ClusterRoleBinding, RBAC
    policies.kyverno.io/title: Restrict Binding System Groups
  name: restrict-binding-system-groups
spec:
  background: true
  rules:
  - match:
      any:
      - resources:
          kinds:
          - RoleBinding
          - ClusterRoleBinding
    name: restrict-masters
    validate:
      message: Binding to system:masters is not allowed.
      pattern:
        roleRef:
          name: '!system:masters'
  validationFailureAction: Audit
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  annotations:
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/category: RBAC Best Practices
    policies.kyverno.io/description: 'A ClusterRole with nodes/proxy resource access
      allows a user to perform anything the kubelet API allows. It also allows users
      to bypass the API server and talk directly to the kubelet potentially circumventing
      audits and admission controllers. See https://blog.aquasec.com/privilege-escalation-kubernetes-rbac
      for more info. This policy prevents the creation of a ClusterRole if it contains
      the nodes/proxy resource.       '
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: ClusterRole, RBAC
    policies.kyverno.io/title: Restrict ClusterRole with Nodes Proxy
  name: restrict-clusterrole-nodesproxy
spec:
  background: true
  rules:
  - match:
      any:
      - resources:
          kinds:
          - ClusterRole
    name: clusterrole-nodesproxy
    validate:
      deny:
        conditions:
          any:
          - key: nodes/proxy
            operator: AnyIn
            value: '{{ request.object.rules[].resources[] }}'
      message: A ClusterRole containing the nodes/proxy resource is not allowed.
  validationFailureAction: Audit
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  annotations:
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/category: RBAC Best Practices
    policies.kyverno.io/description: 'The verbs `impersonate`, `bind`, and `escalate`
      may all potentially lead to privilege escalation and should be tightly controlled.
      This policy prevents use of these verbs in Role or ClusterRole resources.      '
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Role, ClusterRole, RBAC
    policies.kyverno.io/title: Restrict Escalation Verbs in Roles
  name: restrict-escalation-verbs-roles
spec:
  background: true
  rules:
  - match:
      any:
      - resources:
          kinds:
          - Role
          - ClusterRole
    name: escalate
    validate:
      foreach:
      - deny:
          conditions:
            all:
            - key: '{{ element.apiGroups || '''' }}'
              operator: AnyIn
              value:
              - rbac.authorization.k8s.io
            - key: '{{ element.resources || '''' }}'
              operator: AnyIn
              value:
              - clusterroles
              - roles
            - key: '{{ element.verbs }}'
              operator: AnyIn
              value:
              - bind
              - escalate
              - impersonate
        list: request.object.rules[]
      message: Use of verbs `escalate`, `bind`, and `impersonate` are forbidden.
  validationFailureAction: Audit
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  annotations:
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/category: RBAC Best Practices
    policies.kyverno.io/description: 'Wildcards (''*'') in resources grants access
      to all of the resources referenced by the given API group and does not follow
      the principal of least privilege. As much as possible, avoid such open resources
      unless scoped to perhaps a custom API group. This policy blocks any Role or
      ClusterRole that contains a wildcard entry in the resources list found in any
      rule.      '
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: ClusterRole, Role, RBAC
    policies.kyverno.io/title: Restrict Wildcards in Resources
  name: restrict-wildcard-resources
spec:
  background: true
  rules:
  - match:
      any:
      - resources:
          kinds:
          - Role
          - ClusterRole
    name: wildcard-resources
    validate:
      deny:
        conditions:
          any:
          - key: '{{ contains(request.object.rules[].resources[], ''*'') }}'
            operator: Equals
            value: true
      message: Use of a wildcard ('*') in any resources is forbidden.
  validationFailureAction: Audit
