# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Release

permissions: 
    id-token: write
    contents: write
    packages: write

on:
  push:
    tags:
      - 'v*'
    branches: [ "main" ]

concurrency:
  group: ci-build-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  goreleaser:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Check Homebrew formula version
        run: |
          if curl -s "https://raw.githubusercontent.com/nirmata/homebrew-tap/refs/heads/main/kyverno-mcp-rc.rb" > current.rb; then
            current_version="$(grep -Eo 'version "([^"]+)"' current.rb | cut -d'"' -f 2)"
            new_version="${GITHUB_REF#refs/tags/v}"
            echo "Current Homebrew version: $current_version"
            echo "New release version: $new_version"
            
            if dpkg --compare-versions "$new_version" "gt" "$current_version"; then
              echo "SHOULD_UPDATE_BREW=true" >> $GITHUB_ENV
              echo "New version is higher - will update brew"
            else
              echo "SHOULD_UPDATE_BREW=false" >> $GITHUB_ENV
              echo "New version is not higher - will skip brew update"
            fi
          else
            echo "Failed to fetch current formula - will skip brew update"
            echo "SHOULD_UPDATE_BREW=false" >> $GITHUB_ENV
          fi

      - name: Clean up temporary files
        run: |
          rm -f current.rb
          git status

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9ed2f89a662bf1735a48bc8557fd212fa902bebf # v6.1.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout 90m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          SHOULD_UPDATE_BREW: ${{ env.SHOULD_UPDATE_BREW }}

  ko:
    env:
      VERSION:  ${{ github.ref_name }}
      KO_PLATFORMS:   linux/amd64,linux/arm64
      KO_DOCKER_REPO: ghcr.io/nirmata/kyverno-mcp
    needs: goreleaser
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: read
      id-token: write
      packages: write
      security-events: write
    outputs:
      tags: ${{ steps.tag.outputs.tags }}
      digest: ${{ steps.ko-push.outputs.digest }}
    steps:
      - name: Install ko CLI
        uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9.0

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Cache Go modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      - name: Cache Go build
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-build-

      - name: Login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3.9.1

      - name: Set Tag
        id: tag
        run: |
          set -e
          TAG_NAME="${GITHUB_REF#refs/heads/}"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"
          fi
          echo "tags=${GITHUB_SHA},${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: Publish image
        id: ko-push
        run: |
          set -e
          digest=$(VERSION=${{ env.VERSION }} \
          KO_TAG=${{ steps.tag.outputs.tags }} make ko-push | grep -Eo 'sha256:[0-9a-f]+' | head -n1)
          echo "digest=ghcr.io/${{ github.repository }}@${digest}" >> "$GITHUB_OUTPUT"
      
      - name: Sign image
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          IMAGE="ghcr.io/${{ github.repository }}:${{ env.VERSION }}"
          cosign sign --yes "$IMAGE"

      - name: Verify the pushed tags
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign verify ${{ steps.ko-push.outputs.digest }} \
            --certificate-identity-regexp="nirmata" --certificate-oidc-issuer-regexp="githubusercontent"