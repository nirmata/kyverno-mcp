name: Release

permissions: {}

on:
  push:
    tags:
      - 'v*'

env:
  GOPRIVATE: github.com/nirmata
  GH_DEP_USERNAME: ${{ secrets.DEPLOYMENT_USERNAME }}
  GH_DEP_PAT: ${{ secrets.DEPLOYMENT_PAT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  goreleaser:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: false
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Git config
        run: git config --global url.https://$GH_DEP_USERNAME:$GH_DEP_PAT@github.com/.insteadOf https://github.com/
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Check Homebrew formula version
        run: |
          if curl -s "https://raw.githubusercontent.com/nirmata/homebrew-tap/refs/heads/main/kyverno-mcp.rb" > /tmp/current.rb; then
            current_version="$(grep -Eo 'version "([^"]+)"' /tmp/current.rb | cut -d'"' -f 2)"
            new_version="${GITHUB_REF#refs/tags/v}"
            echo "Current Homebrew version: $current_version"
            echo "New release version: $new_version"
            
            if dpkg --compare-versions "$new_version" "gt" "$current_version"; then
              echo "SHOULD_UPDATE_BREW=true" >> $GITHUB_ENV
              echo "New version is higher - will update brew"
            else
              echo "SHOULD_UPDATE_BREW=false" >> $GITHUB_ENV
              echo "New version is not higher - will skip brew update"
            fi
          else
            echo "Failed to fetch current formula - will skip brew update"
            echo "SHOULD_UPDATE_BREW=false" >> $GITHUB_ENV
          fi

      - name: Run GoReleaser
        if: ${{ env.ACT }} == 'true'
        uses: goreleaser/goreleaser-action@9ed2f89a662bf1735a48bc8557fd212fa902bebf # v6.1.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PAT_HOMEBREW_NCTL: ${{ secrets.PAT_HOMEBREW_NCTL }}
          SHOULD_UPDATE_BREW: ${{ env.SHOULD_UPDATE_BREW }}
      - name: Run GoReleaser
        if: ${{ env.ACT }} != 'true'
        uses: goreleaser/goreleaser-action@9ed2f89a662bf1735a48bc8557fd212fa902bebf # v6.1.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout 90m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PAT_HOMEBREW_NCTL: ${{ secrets.PAT_HOMEBREW_NCTL }}
          SHOULD_UPDATE_BREW: ${{ env.SHOULD_UPDATE_BREW }}

